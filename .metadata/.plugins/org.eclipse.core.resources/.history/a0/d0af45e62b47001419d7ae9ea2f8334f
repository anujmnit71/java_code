/*import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;


class Node{
	int data ;
	Node lChild;
	Node rChild;
	 static int preindex = 0;	
	 Node(){
		this.data = -1;
		this.rChild = null;
		this.lChild = null;
	}
	
	Node(int data ){
		this.data = data;
		this.rChild = null;
		this.lChild = null;
	}
	
	
	void displayIn(){
		if(this.lChild != null)
			this.lChild.displayIn();
		System.out.print(this.data + "\t");
		if(this.rChild != null)
			this.rChild.displayIn();
		
	}
	
	static Node buildTree(int[] pre , int[] in , int start , int end , int pindex){
		if(start>end)
			return null;
		
		Node root = new Node(pre[preindex]);
		preindex = preindex +1 ;
		if(start == end){
			return root;
		}
		int i;
		for(i=start ; i<=end ; i++){
			if(in[i] == root.data)
				break;
		}
		
		int index = i;
		root.lChild = buildTree(pre , in , start , index -1 , preindex);
		root.rChild = buildTree(pre , in , index + 1 , end , preindex);

		return root;
	}
	
	
}


public class buildTree {
	
	public static void main(String[] args) throws FileNotFoundException {
		// TODO Auto-generated method stub
		
		File f = new File("src/ip.txt");
		Scanner scan = new Scanner(f);
		int test  = scan.nextInt();
		while(test>0 ){
			int size = scan.nextInt();
			Node head = null;
			int[] pre = new int[size];
			int[] in = new int[size];
			
			for(int i =0; i< size ; i++){
				pre[i] = scan.nextInt();
			}
			
			for(int i =0; i< size ; i++){
				in[i] = scan.nextInt();
			}
			
			head = Node.buildTree(pre, in, 0, size-1 ,0 );
			
			System.out.print("Inorder traversal is \n");
			head.displayIn();
			System.out.println();
			test--;
		}
		
		
	}
}

/*
 1
13
6 2 1 4 3 5 7 8 12 10 9 11 13
1 2 3 4 5 6 7 8 9 10 11 12 13
 
 */

